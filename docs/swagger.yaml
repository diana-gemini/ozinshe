basePath: /
definitions:
  controllers.AuthUser:
    properties:
      email:
        example: user@mail.ru
        type: string
      password:
        example: "123456789"
        type: string
    required:
    - email
    - password
    type: object
  controllers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  controllers.NewAgeCategory:
    properties:
      ageCategoryName:
        example: 0-13
        minLength: 2
        type: string
    required:
    - ageCategoryName
    type: object
  controllers.NewCategory:
    properties:
      categoryName:
        example: Anime
        minLength: 2
        type: string
    required:
    - categoryName
    type: object
  controllers.NewType:
    properties:
      typeName:
        example: Serial
        minLength: 2
        type: string
    required:
    - typeName
    type: object
  controllers.RecoverUserPassword:
    properties:
      email:
        example: user@mail.ru
        type: string
    required:
    - email
    type: object
  controllers.SignUpUser:
    properties:
      email:
        example: user@mail.ru
        type: string
      password:
        example: "123456789"
        type: string
      passwordrepeat:
        example: "123456789"
        type: string
    required:
    - email
    - password
    - passwordrepeat
    type: object
  controllers.UserPassword:
    properties:
      password:
        example: "123456789"
        type: string
      passwordrepeat:
        example: "123456789"
        type: string
    required:
    - password
    - passwordrepeat
    type: object
  controllers.UserProfile:
    properties:
      birthDate:
        example: 01.01.2000
        type: string
      mobilePhone:
        example: +7(705)1112233
        type: string
      username:
        example: Tilda
        minLength: 2
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: API Server for Ozinwe
  title: Ozinwe API
  version: "1.0"
paths:
  /admin/agecategory/{id}/delete:
    delete:
      consumes:
      - application/json
      operationId: delete-age-category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteAgeCategory
      tags:
      - admin-movie-age-category-controller
  /admin/agecategory/{id}/edit:
    get:
      consumes:
      - application/json
      operationId: edit-age-category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: EditAgeCategory
      tags:
      - admin-movie-age-category-controller
  /admin/agecategory/{id}/update:
    put:
      consumes:
      - application/json
      operationId: update-age-category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: ageCategoryName
        in: body
        name: ageCategoryName
        required: true
        schema:
          $ref: '#/definitions/controllers.NewAgeCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateAgeCategory
      tags:
      - admin-movie-age-category-controller
  /admin/agecategory/create:
    post:
      consumes:
      - application/json
      operationId: create-age-category
      parameters:
      - description: ageCategoryName
        in: body
        name: ageCategoryName
        required: true
        schema:
          $ref: '#/definitions/controllers.NewAgeCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateAgeCategory
      tags:
      - admin-movie-age-category-controller
  /admin/category/{id}/delete:
    delete:
      consumes:
      - application/json
      operationId: delete-category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteCategory
      tags:
      - admin-movie-category-controller
  /admin/category/{id}/edit:
    get:
      consumes:
      - application/json
      operationId: edit-category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: EditCategory
      tags:
      - admin-movie-category-controller
  /admin/category/{id}/update:
    put:
      consumes:
      - application/json
      operationId: update-category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: categoryName
        in: body
        name: categoryName
        required: true
        schema:
          $ref: '#/definitions/controllers.NewCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateCategory
      tags:
      - admin-movie-category-controller
  /admin/category/create:
    post:
      consumes:
      - application/json
      operationId: create-category
      parameters:
      - description: categoryName
        in: body
        name: categoryName
        required: true
        schema:
          $ref: '#/definitions/controllers.NewCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateCategory
      tags:
      - admin-movie-category-controller
  /admin/movie/{id}/delete:
    delete:
      consumes:
      - multipart/form-data
      operationId: delete-movie
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteMovie
      tags:
      - admin-movie-controller
  /admin/movie/{id}/edit:
    get:
      consumes:
      - multipart/form-data
      operationId: edit-movie
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: EditMovie
      tags:
      - admin-movie-controller
  /admin/movie/{id}/season/{seasonid}/delete:
    delete:
      consumes:
      - application/json
      operationId: delete-season
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: seasonid
        in: path
        name: seasonid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteSeason
      tags:
      - admin-movie-season-controller
  /admin/movie/{id}/season/{seasonid}/edit:
    get:
      consumes:
      - application/json
      operationId: edit-season
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: seasonid
        in: path
        name: seasonid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: EditSeason
      tags:
      - admin-movie-season-controller
  /admin/movie/{id}/season/{seasonid}/update:
    put:
      consumes:
      - multipart/form-data
      operationId: update-season
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: seasonid
        in: path
        name: seasonid
        required: true
        type: integer
      - collectionFormat: csv
        example:
        - video link
        in: formData
        items:
          type: string
        name: videos
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateSeason
      tags:
      - admin-movie-season-controller
  /admin/movie/{id}/season/create:
    post:
      consumes:
      - multipart/form-data
      operationId: create-season
      parameters:
      - description: movieID
        in: path
        name: id
        required: true
        type: integer
      - collectionFormat: csv
        example:
        - video link
        in: formData
        items:
          type: string
        name: videos
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateSeason
      tags:
      - admin-movie-season-controller
  /admin/movie/{id}/update:
    put:
      consumes:
      - multipart/form-data
      operationId: update-movie
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: field 4
        example: 13-17
        in: formData
        name: ageCategoryID
        required: true
        type: string
      - collectionFormat: csv
        description: field 2
        example:
        - "1"
        in: formData
        items:
          type: string
        name: categoriesID
        required: true
        type: array
      - description: field 8
        example: Konec XX veka. Neskolko let ...
        in: formData
        name: description
        required: true
        type: string
      - description: field 9
        example: Tomokadzu Tokoro, Hideki Tonokacu
        in: formData
        name: director
        required: true
        type: string
      - description: field 7
        example: Film, Horor, Anime
        in: formData
        name: keywords
        required: true
        type: string
      - description: field 1
        example: Hellsing
        in: formData
        name: nameOfProject
        required: true
        type: string
      - description: field 10
        example: Satosi Fudzii, Yosiyuki Fudetani
        in: formData
        name: producer
        required: true
        type: string
      - description: field 6
        example: "89"
        in: formData
        name: timing
        required: true
        type: string
      - description: field 3
        example: "1"
        in: formData
        name: typeID
        required: true
        type: string
      - description: field 5
        example: "2001"
        in: formData
        name: year
        required: true
        type: string
      - collectionFormat: multi
        description: screenshots
        in: formData
        items:
          type: file
        name: screenshots
        required: true
        type: array
      - collectionFormat: csv
        example:
        - video link
        in: formData
        items:
          type: string
        name: videos
        required: true
        type: array
      - description: cover
        in: formData
        name: cover
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateMovie
      tags:
      - admin-movie-controller
  /admin/movie/create:
    post:
      consumes:
      - multipart/form-data
      operationId: create-movie
      parameters:
      - description: field 4
        example: 13-17
        in: formData
        name: ageCategoryID
        required: true
        type: string
      - collectionFormat: csv
        description: field 2
        example:
        - "1"
        in: formData
        items:
          type: string
        name: categoriesID
        required: true
        type: array
      - description: field 8
        example: Konec XX veka. Neskolko let ...
        in: formData
        name: description
        required: true
        type: string
      - description: field 9
        example: Tomokadzu Tokoro, Hideki Tonokacu
        in: formData
        name: director
        required: true
        type: string
      - description: field 7
        example: Film, Horor, Anime
        in: formData
        name: keywords
        required: true
        type: string
      - description: field 1
        example: Hellsing
        in: formData
        name: nameOfProject
        required: true
        type: string
      - description: field 10
        example: Satosi Fudzii, Yosiyuki Fudetani
        in: formData
        name: producer
        required: true
        type: string
      - description: field 6
        example: "89"
        in: formData
        name: timing
        required: true
        type: string
      - description: field 3
        example: "1"
        in: formData
        name: typeID
        required: true
        type: string
      - description: field 5
        example: "2001"
        in: formData
        name: year
        required: true
        type: string
      - collectionFormat: multi
        description: screenshots
        in: formData
        items:
          type: file
        name: screenshots
        required: true
        type: array
      - collectionFormat: csv
        example:
        - video link
        in: formData
        items:
          type: string
        name: videos
        required: true
        type: array
      - description: cover
        in: formData
        name: cover
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateMovie
      tags:
      - admin-movie-controller
  /admin/type/{id}/delete:
    delete:
      consumes:
      - application/json
      operationId: delete-type
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteTypeOfProject
      tags:
      - admin-movie-type-controller
  /admin/type/{id}/edit:
    get:
      consumes:
      - application/json
      operationId: edit-type
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: EditTypeOfProject
      tags:
      - admin-movie-type-controller
  /admin/type/{id}/update:
    put:
      consumes:
      - application/json
      operationId: update-type
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: typeName
        in: body
        name: typeName
        required: true
        schema:
          $ref: '#/definitions/controllers.NewType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateTypeOfProject
      tags:
      - admin-movie-type-controller
  /admin/type/create:
    post:
      consumes:
      - application/json
      operationId: create-type
      parameters:
      - description: typeName
        in: body
        name: typeName
        required: true
        schema:
          $ref: '#/definitions/controllers.NewType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateTypeOfProject
      tags:
      - admin-movie-type-controller
  /all:
    get:
      consumes:
      - application/json
      operationId: get-all-movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllMovies
      tags:
      - movie-controller
  /anime:
    get:
      consumes:
      - application/json
      operationId: get-anime
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAnime
      tags:
      - main-page-controller
  /changepassword:
    post:
      consumes:
      - application/json
      operationId: change-password
      parameters:
      - description: changePassword
        in: body
        name: changePassword
        required: true
        schema:
          $ref: '#/definitions/controllers.UserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ChangePassword
      tags:
      - user-controller
  /editprofile:
    get:
      consumes:
      - application/json
      operationId: edit-user-profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: EditUserProfile
      tags:
      - user-controller
  /home:
    get:
      consumes:
      - application/json
      operationId: home
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Home
      tags:
      - main-page-controller
  /horor:
    get:
      consumes:
      - application/json
      operationId: get-horor
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetHoror
      tags:
      - main-page-controller
  /login:
    post:
      consumes:
      - application/json
      operationId: log-in
      parameters:
      - description: loginRequest
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/controllers.AuthUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Login
      tags:
      - auth-controller
  /logout:
    post:
      consumes:
      - application/json
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - auth-controller
  /movie/{id}:
    get:
      consumes:
      - application/json
      operationId: get-movie-by-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetMovieByID
      tags:
      - movie-controller
  /movie/{id}/favorite:
    delete:
      consumes:
      - application/json
      operationId: delete-movie-from-favorite
      parameters:
      - description: movieID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteMovieFromFavorite
      tags:
      - movie-controller
    post:
      consumes:
      - application/json
      operationId: add-movie-to-favorite
      parameters:
      - description: movieID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: AddMovieToFavorite
      tags:
      - movie-controller
  /movie/{id}/series/{seasonid}/{seriesid}:
    get:
      consumes:
      - application/json
      operationId: get-movie-series-by-id
      parameters:
      - description: movieid
        in: path
        name: id
        required: true
        type: integer
      - description: seasonid
        in: path
        name: seasonid
        required: true
        type: integer
      - description: seriesid
        in: path
        name: seriesid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetMovieSeriesByID
      tags:
      - movie-controller
  /movie/favorite:
    get:
      consumes:
      - application/json
      operationId: get-all-favorite-movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllFavoriteMovies
      tags:
      - movie-controller
  /newprojects:
    get:
      consumes:
      - application/json
      operationId: get-new-projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetNewprojects
      tags:
      - main-page-controller
  /passwordrecover:
    post:
      consumes:
      - application/json
      operationId: password-recover
      parameters:
      - description: email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/controllers.RecoverUserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: PasswordRecover
      tags:
      - password-controller
  /resetpassword:
    post:
      consumes:
      - application/json
      operationId: password-reset
      parameters:
      - description: token received in the URL
        in: query
        name: token
        required: true
        type: string
      - description: resetPassword
        in: body
        name: resetPassword
        required: true
        schema:
          $ref: '#/definitions/controllers.UserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: ResetPassword
      tags:
      - password-controller
  /search:
    get:
      consumes:
      - application/json
      operationId: search
      parameters:
      - description: search param received in the URL
        in: query
        name: search
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search
      tags:
      - search-controller
  /signup:
    post:
      consumes:
      - application/json
      operationId: create-account
      parameters:
      - description: signupRequest
        in: body
        name: signupRequest
        required: true
        schema:
          $ref: '#/definitions/controllers.SignUpUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: SignUp
      tags:
      - auth-controller
  /telehikaya:
    get:
      consumes:
      - application/json
      operationId: get-telehikaya
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetTelehikaya
      tags:
      - main-page-controller
  /trends:
    get:
      consumes:
      - application/json
      operationId: get-trends
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetTrends
      tags:
      - main-page-controller
  /updateprofile:
    put:
      consumes:
      - application/json
      operationId: update-user-profile
      parameters:
      - description: updateUserProfile
        in: body
        name: updateUserProfile
        required: true
        schema:
          $ref: '#/definitions/controllers.UserProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateUserProfile
      tags:
      - user-controller
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
